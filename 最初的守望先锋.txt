规则("[天使]初始化")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		英雄(事件玩家) == 英雄(天使);
	}

	动作
	{
		设置玩家变量(事件玩家, G, 真);
		设置玩家变量(事件玩家, L, 空数组);
		禁用按钮(事件玩家, 终极技能);
	}
}

规则("[天使]终极技能充能完毕时创建可复活玩家数量显示")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		英雄(事件玩家) == 英雄(天使);
		终极技能充能百分比(事件玩家) == 100;
	}

	动作
	{
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 字符串("复活", 无, 无, 无), 数量(玩家变量(事件玩家, L)), 无), 无, 无, 顶部, 0, 白色, 白色, 白色, 字符串);
		设置玩家变量(事件玩家, X, 上一个文本ID);
	}
}

规则("[天使]终极技能使用后消除可复活玩家数量显示")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		英雄(事件玩家) == 英雄(天使);
		终极技能充能百分比(事件玩家) < 100;
	}

	动作
	{
		消除HUD文本(玩家变量(事件玩家, X));
	}
}

规则("[天使]更新可复活玩家列表")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		英雄(事件玩家) == 英雄(天使);
		终极技能充能百分比(事件玩家) == 100;
		存活玩家数量(队伍(事件玩家)) < 玩家数量(队伍(事件玩家));
		玩家变量(事件玩家, G) == 真;
	}

	动作
	{
		设置玩家变量(事件玩家, L, 范围内玩家(事件玩家, 15, 队伍(事件玩家), 关闭));
		设置玩家变量(事件玩家, L, 已过滤的数组(玩家变量(事件玩家, L), 死亡(当前数组元素)));
		等待(0.250, 无视条件);
		如条件为”真“则循环;
	}
}

规则("[天使]F键终极技能群体复活")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		英雄(事件玩家) == 英雄(天使);
		终极技能充能百分比(事件玩家) == 100;
		按钮被按下(事件玩家, 互动) == 真;
		数量(玩家变量(事件玩家, L)) > 0;
		具有状态(事件玩家, 被入侵) == 假;
		具有状态(事件玩家, 击倒) == 假;
		具有状态(事件玩家, 沉睡) == 假;
		具有状态(事件玩家, 冻结) == 假;
		具有状态(事件玩家, 昏迷) == 假;
		死亡(事件玩家) == 假;
	}

	动作
	{
		设置玩家变量(事件玩家, G, 假);
		播放效果(所有玩家(所有队伍), 有益爆炸, 黄色, 事件玩家, 15);
		重生(玩家变量(事件玩家, L));
		设置状态(事件玩家, 无, 无敌, 2.250);
		设置状态(玩家变量(事件玩家, L), 无, 昏迷, 2.250);
		设置状态(玩家变量(事件玩家, L), 无, 无敌, 2.500);
		设置终极技能充能(事件玩家, 0);
		大字体信息(玩家变量(事件玩家, L), 字符串("已重生", 无, 无, 无));
		大字体信息(事件玩家, 字符串("已重生", 无, 无, 无));
		设置玩家变量(事件玩家, L, 空数组);
		设置玩家变量(事件玩家, G, 真);
	}
}

规则("[秩序之光]全局初始化")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		正在使用英雄(英雄(秩序之光), 队伍(事件玩家)) == 真;
	}

	动作
	{
		设置玩家变量(事件玩家, Z, 假);
	}
}

规则("[秩序之光]初始化")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		英雄(事件玩家) == 英雄(秩序之光);
	}

	动作
	{
		禁用按钮(事件玩家, 终极技能);
		设置玩家变量(事件玩家, L, 0);
	}
}

规则("[秩序之光]放置传送门")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		英雄(事件玩家) == 英雄(秩序之光);
		终极技能充能百分比(事件玩家) == 100;
		按钮被按下(事件玩家, 终极技能) == 真;
		具有状态(事件玩家, 被入侵) == 假;
		具有状态(事件玩家, 击倒) == 假;
		具有状态(事件玩家, 沉睡) == 假;
		具有状态(事件玩家, 冻结) == 假;
		具有状态(事件玩家, 昏迷) == 假;
		死亡(事件玩家) == 假;
	}

	动作
	{
		消除效果(玩家变量(事件玩家, V));
		消除效果(玩家变量(事件玩家, W));
		消除地图文本(玩家变量(事件玩家, X));
		设置玩家变量(事件玩家, T, 位置(事件玩家));
		设置玩家变量(事件玩家, H, 生命值(事件玩家));
		重生(事件玩家);
		等待(0.250, 无视条件);
		设置玩家变量(事件玩家, U, 位置(事件玩家));
		传送(事件玩家, 玩家变量(事件玩家, T));
		伤害(事件玩家, 无, 减(最大生命值(事件玩家), 玩家变量(事件玩家, H)));
		创建效果(所有玩家(所有队伍), 环, 绿色, 玩家变量(事件玩家, T), 1, 无);
		设置玩家变量(事件玩家, V, 最后创建的实体);
		创建效果(所有玩家(所有队伍), 环, 蓝色, 玩家变量(事件玩家, U), 1, 无);
		设置玩家变量(事件玩家, W, 最后创建的实体);
		设置玩家变量(事件玩家, L, 6);
		创建地图文本(所有玩家(队伍(事件玩家)), 字符串("{0}:{1}", 字符串("剩余", 无, 无, 无), 玩家变量(事件玩家, L), 无), 玩家变量(事件玩家, U), 2, 根据表面截取, 字符串);
		设置玩家变量(事件玩家, X, 上一个文本ID);
		设置终极技能充能(事件玩家, 0);
		大字体信息(所有玩家(队伍(事件玩家)), 字符串("{0} {1}", 字符串("漩涡", 无, 无, 无), 字符串("开启", 无, 无, 无), 无));
		设置玩家变量(事件玩家, A, 英雄(秩序之光));
	}
}

规则("[秩序之光]传送")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		相距距离(事件玩家, 玩家变量(选择英雄的玩家(英雄(秩序之光), 队伍(事件玩家)), U)) <= 1;
		相距距离(事件玩家, 玩家变量(选择英雄的玩家(英雄(秩序之光), 队伍(事件玩家)), L)) > 0;
	}

	动作
	{
		传送(事件玩家, 玩家变量(选择英雄的玩家(英雄(秩序之光), 队伍(事件玩家)), T));
		修改玩家变量(选择英雄的玩家(英雄(秩序之光), 队伍(事件玩家)), L, 减, 1);
		小字体信息(选择英雄的玩家(英雄(秩序之光), 队伍(事件玩家)), 字符串("已送达", 无, 无, 无));
		设置终极技能充能(选择英雄的玩家(英雄(秩序之光), 队伍(事件玩家)), 加(终极技能充能百分比(选择英雄的玩家(英雄(秩序之光), 队伍(事件玩家))), 7));
		根据条件中止(比较(玩家变量(选择英雄的玩家(英雄(秩序之光), 队伍(事件玩家)), L), >, 0));
		消除效果(玩家变量(选择英雄的玩家(英雄(秩序之光), 队伍(事件玩家)), V));
		消除效果(玩家变量(选择英雄的玩家(英雄(秩序之光), 队伍(事件玩家)), W));
		小字体信息(选择英雄的玩家(英雄(秩序之光), 队伍(事件玩家)), 字符串("已摧毁", 无, 无, 无));
		大字体信息(所有玩家(队伍(事件玩家)), 字符串("{0} {1}", 字符串("漩涡", 无, 无, 无), 字符串("关闭", 无, 无, 无), 无));
		等待(0.250, 无视条件);
		消除地图文本(玩家变量(选择英雄的玩家(英雄(秩序之光), 队伍(事件玩家)), X));
		设置玩家变量(选择英雄的玩家(英雄(秩序之光), 队伍(事件玩家)), A, 无);
	}
}

规则("[秩序之光]贴膜")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		英雄(事件玩家) == 英雄(秩序之光);
		玩家变量(视角中的玩家(事件玩家, 队伍(事件玩家), 30), Z) == 假;
		按钮被按下(事件玩家, 技能2) == 真;
		存活(事件玩家) == 真;
		存活(视角中的玩家(事件玩家, 队伍(事件玩家), 30)) == 真;
		具有状态(事件玩家, 被入侵) == 假;
		具有状态(事件玩家, 击倒) == 假;
		具有状态(事件玩家, 沉睡) == 假;
		具有状态(事件玩家, 冻结) == 假;
		具有状态(事件玩家, 昏迷) == 假;
	}

	动作
	{
		设置玩家变量(视角中的玩家(事件玩家, 队伍(事件玩家), 30), Z, 真);
		设置最大生命值(视角中的玩家(事件玩家, 队伍(事件玩家), 30), 乘(除(加(最大生命值(视角中的玩家(事件玩家, 队伍(事件玩家), 30)), 25), 最大生命值(视角中的玩家(事件玩家, 队伍(事件玩家), 30))), 100));
		治疗(视角中的玩家(事件玩家, 队伍(事件玩家), 30), 无, 25);
	}
}

规则("[秩序之光]膜自动回复计时刷新")
{
	事件
	{
		玩家受到伤害;
		双方;
		全部;
	}

	条件
	{
		玩家变量(事件玩家, Z) == 真;
	}

	动作
	{
		设置玩家变量(事件玩家, Y, 3);
	}
}

规则("[秩序之光]膜回复")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		玩家变量(事件玩家, Z) == 真;
		玩家变量(事件玩家, Y) > 0;
	}

	动作
	{
		等待(0.100, 当为“假”时中止);
		修改玩家变量(事件玩家, Y, 减, 0.100);
		如条件为”真“则循环;
		开始持续治疗(事件玩家, 无, 0.833, 30);
	}
}

规则("[秩序之光]离场时取消贴膜")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		正在使用英雄(英雄(秩序之光), 队伍(事件玩家)) == 假;
		玩家变量(事件玩家, Z) == 真;
	}

	动作
	{
		设置玩家变量(事件玩家, Z, 假);
		设置最大生命值(事件玩家, 100);
	}
}

规则("[秩序之光]离场时消除未用完的传送门")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		玩家变量(事件玩家, A) == 英雄(秩序之光);
		英雄(事件玩家) != 玩家变量(事件玩家, A);
	}

	动作
	{
		消除效果(玩家变量(事件玩家, V));
		消除效果(玩家变量(事件玩家, W));
		大字体信息(所有玩家(队伍(事件玩家)), 字符串("{0} {1}", 字符串("漩涡", 无, 无, 无), 字符串("关闭", 无, 无, 无), 无));
		消除地图文本(玩家变量(事件玩家, X));
		设置玩家变量(事件玩家, A, 无);
		设置玩家变量(事件玩家, T, 无);
		设置玩家变量(事件玩家, U, 无);
		设置玩家变量(事件玩家, V, 无);
		设置玩家变量(事件玩家, W, 无);
		设置玩家变量(事件玩家, X, 无);
	}
}

规则("[托比昂]初始化")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		英雄(事件玩家) == 英雄(托比昂);
	}

	动作
	{
		等待(0.250, 无视条件);
		设置玩家变量(事件玩家, B, 0);
		创建HUD文本(事件玩家, 字符串("{0}:{1}", 字符串("剩余", 无, 无, 无), 玩家变量(事件玩家, B), 无), 无, 无, 右边, 0, 白色, 白色, 白色, 字符串);
		设置玩家变量(事件玩家, X, 上一个文本ID);
		设置玩家变量(事件玩家, A, 英雄(托比昂));
	}
}

规则("[托比昂]获取零件")
{
	事件
	{
		玩家参与消灭;
		双方;
		全部;
	}

	条件
	{
		英雄(事件玩家) == 英雄(托比昂);
		玩家变量(事件玩家, B) < 200;
	}

	动作
	{
		修改玩家变量(事件玩家, B, 加, 25);
		设置玩家变量(事件玩家, L, 取整(除(玩家变量(事件玩家, B), 25), 下));
	}
}

规则("[托比昂]设置护甲包提供点")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		英雄(事件玩家) == 英雄(托比昂);
		按钮被按下(事件玩家, 技能2) == 真;
		具有状态(事件玩家, 被入侵) == 假;
		具有状态(事件玩家, 击倒) == 假;
		具有状态(事件玩家, 沉睡) == 假;
		具有状态(事件玩家, 冻结) == 假;
		具有状态(事件玩家, 昏迷) == 假;
		死亡(事件玩家) == 假;
	}

	动作
	{
		消除效果(玩家变量(事件玩家, V));
		消除地图文本(玩家变量(事件玩家, W));
		设置玩家变量(事件玩家, T, 位置(事件玩家));
		创建效果(所有玩家(队伍(事件玩家)), 云, 黄色, 玩家变量(事件玩家, T), 1, 可见，位置和半径);
		设置玩家变量(事件玩家, V, 最后创建的实体);
		创建地图文本(所有玩家(队伍(事件玩家)), 字符串("{0}:{1}", 字符串("剩余", 无, 无, 无), 玩家变量(事件玩家, L), 无), 玩家变量(事件玩家, T), 2, 根据表面截取, 字符串);
		设置玩家变量(事件玩家, W, 上一个文本ID);
	}
}

规则("[托比昂]护甲包获取")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		玩家变量(事件玩家, S) == 假;
		正在使用英雄(英雄(托比昂), 队伍(事件玩家)) == 真;
		相距距离(事件玩家, 玩家变量(选择英雄的玩家(英雄(托比昂), 队伍(事件玩家)), T)) <= 1.500;
		玩家变量(选择英雄的玩家(英雄(托比昂), 队伍(事件玩家)), L) > 0;
		按钮被按下(事件玩家, 互动) == 真;
		具有状态(事件玩家, 击倒) == 假;
		具有状态(事件玩家, 沉睡) == 假;
		具有状态(事件玩家, 冻结) == 假;
		具有状态(事件玩家, 昏迷) == 假;
		死亡(事件玩家) == 假;
	}

	动作
	{
		设置玩家变量(事件玩家, S, 真);
		设置最大生命值(事件玩家, 乘(除(加(最大生命值(事件玩家), 25), 最大生命值(事件玩家)), 100));
		修改玩家变量(选择英雄的玩家(英雄(托比昂), 队伍(事件玩家)), L, 减, 1);
		修改玩家变量(选择英雄的玩家(英雄(托比昂), 队伍(事件玩家)), B, 减, 25);
	}
}

规则("[托比昂]护甲抵挡伤害")
{
	事件
	{
		玩家受到伤害;
		双方;
		全部;
	}

	条件
	{
		玩家变量(事件玩家, S) == 真;
		加(生命值(事件玩家), 事件伤害) >= 减(最大生命值(事件玩家), 25);
	}

	动作
	{
		治疗(事件玩家, 无, 3);
	}
}

规则("[托比昂]退场后消除护甲包提供点")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		玩家变量(事件玩家, A) == 英雄(托比昂);
		英雄(事件玩家) != 玩家变量(事件玩家, A);
	}

	动作
	{
		消除效果(玩家变量(事件玩家, V));
		消除地图文本(玩家变量(事件玩家, W));
		设置玩家变量(事件玩家, A, 0);
		设置玩家变量(事件玩家, L, 0);
		设置玩家变量(事件玩家, T, 0);
		设置玩家变量(事件玩家, U, 0);
		设置玩家变量(事件玩家, V, 0);
		设置玩家变量(事件玩家, W, 0);
		设置玩家变量(事件玩家, X, 0);
	}
}

规则("[托比昂]退场后消除影响")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		正在使用英雄(英雄(托比昂), 队伍(事件玩家)) == 假;
		玩家变量(事件玩家, S) == 真;
	}

	动作
	{
		设置玩家变量(事件玩家, S, 假);
		设置最大生命值(事件玩家, 100);
	}
}

禁用 规则("[托比昂]全局初始化")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	动作
	{
		设置玩家变量(事件玩家, C, 空数组);
		设置玩家变量(事件玩家, D, 空数组);
	}
}

禁用 规则("[托比昂]产生零件")
{
	事件
	{
		玩家阵亡;
		双方;
		全部;
	}

	动作
	{
		修改玩家变量(事件玩家, C, 添加至数组, 位置(事件玩家));
	}
}

禁用 规则("[temp]互动键自杀")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 互动) == 真;
	}

	动作
	{
		击杀(事件玩家, 无);
	}
}

禁用 规则("[temp]互动键消灭队友")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 互动) == 真;
		英雄(事件玩家) == 英雄(天使);
	}

	动作
	{
		传送(所有玩家(队伍(事件玩家)), 事件玩家);
		击杀(所有玩家(队伍(事件玩家)), 无);
	}
}

禁用 规则("[temp]互动键伤害队友")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		英雄(事件玩家) == 英雄(秩序之光);
		按钮被按下(事件玩家, 互动) == 真;
	}

	动作
	{
		伤害(所有玩家(队伍(事件玩家)), 无, 30);
	}
}